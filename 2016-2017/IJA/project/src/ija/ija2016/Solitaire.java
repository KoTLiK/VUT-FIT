/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ija.ija2016;

import ija.ija2016.game.gui.GamePanel;
import ija.ija2016.game.*;
import ija.ija2016.game.model.Game;
import java.io.*;

/**
 * Třída reprezentující grafiku samotného programu (okno).
 *
 * @author Milan Augustín (xaugus09)
 * @author Vojtěch Kozel (xkozel18)
 */
public class Solitaire extends javax.swing.JFrame {

    // Max number of games
    private final Thread[] GameThreads = new Thread[4];
    private final Boolean[] Games = new Boolean[4];
    private int active;
    
    /**
     * Vytvoří a inicializuje okno programu
     */
    public Solitaire() {
        for (int i = active = 0; i < 4; i++) {
            // inicialization
            GameThreads[i] = null;
            Games[i] = false;
        }
        
        initComponents();
        
        javax.swing.JPanel x = new javax.swing.JPanel();
        x.setBackground(new java.awt.Color(200, 200, 200));
        x.setMinimumSize(new java.awt.Dimension(700, 520));
        model.add(x);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        model = new javax.swing.JPanel();
        jMenuBar = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        loadMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Solitaire");
        setBackground(java.awt.Color.gray);
        setMinimumSize(new java.awt.Dimension(700, 597));
        setPreferredSize(new java.awt.Dimension(700, 597));

        model.setBackground(java.awt.Color.gray);
        model.setAutoscrolls(true);
        model.setMinimumSize(new java.awt.Dimension(700, 520));
        model.setLayout(new java.awt.GridLayout(1, 1, 1, 1));

        jMenu1.setText("File");

        jMenuItem1.setText("New Game");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newGame(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        loadMenu.setText("Load Game");
        loadMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                checkSaves(evt);
            }
        });
        jMenu1.add(loadMenu);

        jMenuBar.add(jMenu1);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(model, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(model, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Vytvoření nové hry.
     *
     * @param evt Kliknutí.
     */
    private void newGame(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGame
        int count = 0;
        for (int i =  0; i < 4; i++) {
            if (!Games[i]) {
                if (active++ == 1) {
                    for (int j = 0; j < 4; j++)
                        if (Games[j]) this.grow(j);
                }
                GameThreads[i] = new Thread(new SolitaireGame(this, i, null));
                java.awt.EventQueue.invokeLater(GameThreads[i]);
                //GameThreads[i].start();
                Games[i] = true;
                break;
            } else count++;
        }

        if (count == 4)
            javax.swing.JOptionPane.showMessageDialog(model,"Close one game, before you create another.");
    }//GEN-LAST:event_newGame

    /**
     * Zobrazení všech dostupních uložených her.
     *
     * @param evt MouseEntered.
     */
    private void checkSaves(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkSaves
        loadMenu.removeAll();
        
        File dir = new File("examples");
        File[] fileslist = dir.listFiles();
        javax.swing.JMenuItem save;
        if (fileslist != null) {
            for (File f : fileslist) {
                if (f.isFile()) {
                    String name = f.getName();
                    name = name.replaceAll(".save$", "");
                    save = new javax.swing.JMenuItem(name);
                    save.addActionListener(new java.awt.event.ActionListener() {
                        @Override
                        public void actionPerformed(java.awt.event.ActionEvent e) {
                            loadGame(f.getName());
                        }
                    });
                    loadMenu.add(save);
                }
            }
        }

    }//GEN-LAST:event_checkSaves

    /**
     * Načítaní hry.
     *
     * @param file Název souboru.
     */
    private void loadGame(String file) {
        Game game;
        try {
            FileInputStream loadFile = new FileInputStream("examples/"+file);
            ObjectInputStream loadObject = new ObjectInputStream(loadFile);
            game = (Game)loadObject.readObject();
            loadFile.close();
        } catch (FileNotFoundException e) {
            javax.swing.JOptionPane.showMessageDialog(model,"Load game failed!",
                    "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        } catch (IOException | ClassNotFoundException e) {
            e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(model,"Load game failed!",
                    "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        int count = 0;
        for (int i =  0; i < 4; i++) {
            if (!Games[i]) {
                if (active++ == 1) {
                    for (int j = 0; j < 4; j++)
                        if (Games[j]) this.grow(j);
                }
                GameThreads[i] = new Thread(new SolitaireGame(this, i, game));
                java.awt.EventQueue.invokeLater(GameThreads[i]);
                //GameThreads[i].start();
                Games[i] = true;
                break;
            } else count++;
        }

        if (count == 4)
            javax.swing.JOptionPane.showMessageDialog(model,"Close one game, before you create another.");
    }

    /**
     * Přidání hry do okna.
     *
     * @param gamePanel Hra, její GUI.
     * @param index     Její ID.
     */
    public void addGame(GamePanel gamePanel, int index) {
        model.remove(index);
        model.add(gamePanel, index);
        this.pack();
    }

    /**
     * Ukončení hry.
     *
     * @param index ID hry.
     */
    public void closeGame(int index) {
        if (active == 1) model.remove(0);
        else model.remove(index);

        GameThreads[index].stop();
        Games[index] = false;

        javax.swing.JPanel x = new javax.swing.JPanel();
        x.setBackground(new java.awt.Color(200, 200, 200));
        x.setMinimumSize(new java.awt.Dimension(700, 520));
        if (active == 1) model.add(x, 0);
        else model.add(x, index);

        if (--active == 1) {
            for (int i = 0; i < 4; i++)
                if (Games[i]) this.shrink(i);
        }

        this.pack();
    }

    /**
     * Zmena zobrazení okna, z okna bez mřížky na grid 2x2.
     *
     * @param index ID aktivní hry.
     */
    public void grow(int index) {
        model.setLayout(new java.awt.GridLayout(2,2));
        setPreferredSize(new java.awt.Dimension(1400, 1000));

        for (int i = 0; i < 4; i++) {
            if (i != index) {
                javax.swing.JPanel x = new javax.swing.JPanel();
                x.setBackground(new java.awt.Color(200, 200, 200));
                x.setMinimumSize(new java.awt.Dimension(700, 520));
                model.add(x, i);
            }
        }
        
        centreWindow(this);
    }

    /**
     * Zmena zobrazení okna, z gridu 2x2 na okno bez mřížky.
     *
     * @param index ID aktivní hry.
     */
    public void shrink(int index) {
        for (int i = 3; i >= 0; i--) {
            if (i != index) model.remove(i);
        }
        model.setLayout(new java.awt.GridLayout(1,1));
        setPreferredSize(new java.awt.Dimension(700, 597));
        centreWindow(this);
    }

    /**
     * Vycentrování okna programu na střed obrazovky.
     *
     * @param frame Okno programu.
     */
    public static void centreWindow(Solitaire frame) {
        frame.pack();
        java.awt.Dimension dimension = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((dimension.getWidth() - frame.getWidth()) / 2);
        int y = (int) ((dimension.getHeight() - frame.getHeight()) / 2);
        frame.setLocation(x, y);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Solitaire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Solitaire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Solitaire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Solitaire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Solitaire().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenu loadMenu;
    private javax.swing.JPanel model;
    // End of variables declaration//GEN-END:variables
}
